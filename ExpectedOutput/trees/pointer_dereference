digraph {
	1 [label="C
(None)"]
	3 [label="include
(None)"]
	1 -> 3
	5 [label="method_definition
(None)"]
	1 -> 5
	7 [label="int
(int)"]
	5 -> 7
	6 [label="main
(None)"]
	5 -> 6
	8 [label="scope
(None)"]
	5 -> 8
	10 [label="definition
(None)"]
	8 -> 10
	11 [label="int
(int)"]
	10 -> 11
	12 [label="assignment2
(None)"]
	10 -> 12
	13 [label="i
(None)"]
	12 -> 13
	21 [label="5
(int)"]
	12 -> 21
	23 [label="definition
(None)"]
	8 -> 23
	25 [label="int*
(int*)"]
	23 -> 25
	26 [label="assignment2
(None)"]
	23 -> 26
	27 [label="j
(None)"]
	26 -> 27
	35 [label="i
(&int)"]
	26 -> 35
	37 [label="definition
(None)"]
	8 -> 37
	39 [label="int**
(int**)"]
	37 -> 39
	40 [label="assignment2
(None)"]
	37 -> 40
	41 [label="x
(None)"]
	40 -> 41
	49 [label="j
(&int*)"]
	40 -> 49
	51 [label="assignment
(None)"]
	8 -> 51
	53 [label="**x
(<src.symbolTables.SymbolType object at 0x7f9929c89208>)"]
	51 -> 53
	61 [label="3
(int)"]
	51 -> 61
	71 [label="method_call
(None)"]
	8 -> 71
	72 [label="printf
(None)"]
	71 -> 72
	73 [label="args
(None)"]
	71 -> 73
	81 [label="%d
(char*)"]
	73 -> 81
	90 [label="**x
(<src.symbolTables.SymbolType object at 0x7f9929c89208>)"]
	73 -> 90
	91 [label="empty arg
(None)"]
	71 -> 91
	93 [label="return
(None)"]
	8 -> 93
	101 [label="0
(int)"]
	93 -> 101
}
